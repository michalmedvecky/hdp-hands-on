---

- include: ../../../includes/tasks/systemd.yml script_name='hdfs-namenode'
- include: ../../../includes/tasks/systemd.yml script_name='hdfs-datanode'
- include: ../../../includes/tasks/systemd.yml script_name='hdfs-zkfc'

- name: create hdfs namenode data directory
  file: path={{ hdfs_namenode_name_dir }} state=directory owner=hdfs group=hadoop
  register: create_hdfs_namenode_data_dir
  when: hdfs_namenode_name_dir is defined

- name: create hdfs namenode checkpoint directory
  file: path={{ hdfs_namenode_checkpoint_dir }} state=directory owner=hdfs group=hadoop
  when: hdfs_namenode_checkpoint_dir is defined

- name: create hdfs namenode data directories
  file: path={{ item }} state=directory owner=hdfs group=hadoop
  register: create_hdfs_namenode_data_dir
  with_items: hdfs_namenode_name_dirs
  when: hdfs_namenode_name_dirs is defined

- name: format ZooKeeper HA state
  command: /usr/bin/hdfs zkfc -formatZK -nonInteractive
  when: "'hdfs-primary' in group_names and hdfs_force_format is defined"
  become: yes
  become_user: hdfs
  run_once: yes
  ignore_errors: yes

- name: format hdfs namenode data directory
  command: /usr/bin/hdfs namenode -format
  when: '"hdfs-primary" in group_names and hdfs_force_format is defined'
  become: yes
  become_user: hdfs

- name: start hdfs namenode
  service: name=hdfs-namenode state=started enabled=yes
  when: '"hdfs-primary" in group_names and hdfs_force_format is defined'

- name: format hdfs namenode data directory on secondary node
  command: /usr/bin/hdfs namenode -bootstrapStandby
  when: '"hdfs-secondary" in group_names and hdfs_force_format is defined'
  become: yes
  become_user: hdfs

- name: start hdfs namenode
  service: name=hdfs-namenode state=started enabled=yes

- name: start hdfs zkfc
  service: name=hdfs-zkfc state=started enabled=yes
